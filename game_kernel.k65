data TestSine {
	align 256
	for x=0..255 eval [ p = x/256*5, (sin(p*2*pi)*0.5+0.5)*254+1 ]
}

data TestSine2 {
	align 256
	for x=0..255 eval [ p = x/256*7, (sin(p*2*pi)*0.5+0.5)*156+1 ]
}

func game_kernel {

	{
	sync1
		anim++

		// move
		x=47 {
			ShotPosA,x=a=ShotPosA-1,x
			x--
		}!=
		x=0{
			ShotPosB,x=a=ShotPosB+1,x
			x++
			x?47
		}<

		// shoot
		y=anim 
		ShotPosA=a=TestSine,y
		ShotPosB+47=a=TestSine2,y

	sync2
	
	sync3
	
		cp0=a=0x3F
		cp1=a=0x4F

		wsync
		x=48
		nocross {
		.loop:
			a=ShotPosA-1,x
			wsync gp1=y=0 hmclr=a { a-30 }>= a<< a<< a<< a^0x70 hp1=a rp1=a
			wsync hmove=a a=ShotPosA-1,x !={ a=0x80 } gp1=a
	
			a=ShotPosB-1,x
			wsync gp0=y=0 hmclr=a { a-30 }>= a<< a<< a<< a^0x70 hp0=a rp0=a
			wsync hmove=a a=ShotPosB-1,x !={ a=0x80 } gp0=a
			x--
			== goto .endloop
			goto .loop
		.endloop:
		}
		wsync
		a=0
		gp0=gp1=a

	} always	// loop forever
}
