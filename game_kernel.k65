data TestSine {
	align 256
	for x=0..255 eval [ p = x/256*5, (sin(p*2*pi)*0.5+0.5)*254+1 ]
}

data TestSine2 {
	align 256
	for x=0..255 eval [ p = x/256*7, (sin(p*2*pi)*0.5+0.5)*156+1 ]
}




func game_kernel {

	{
	sync1
		anim++

		// move
		x=[MISSILE_COUNT-1] {
			ShotPosA,x=a=ShotPosA-1,x
			x--
		}!=
		x=0{
			ShotPosB,x=a=ShotPosB+1,x
			x++
			x?[MISSILE_COUNT-1]
		}<

		// shoot
		a=swchb a&0x08
		== {
			ShotPosA=a=0
			ShotPosB+[MISSILE_COUNT-1]=a=0
			a=inpt4
			>=0 { ShotPosB+[MISSILE_COUNT-1]=a=P1X }
			a=inpt5
			>=0 { ShotPosA=a=P2X }
		} 
		else { 
			y=anim	
			ShotPosA=a=TestSine,y
			ShotPosB+[MISSILE_COUNT-1]=a=TestSine2,y
		}
		
		player1_input
		player2_input

	sync2
	
		a=P1Frame a&0xF0
		ptrA=a
		ptrA+1=a=&>sprite
		a=P2Frame a&0xF0
		ptrB=a
		ptrB+1=a=&>sprite
	sync3
	
		cp0=a=0x3F
		cp1=a=0x4F

		// KERNEL 1A
		kernel_terror1

		// KERNEL 2A
		a=P1X
		wsync gp0=y=0 c+ hmclr=a { a-30 }>= a<< a<< a<< a^0x70 hp0=a rp0=a
		wsync hmove=a
		tmp1=a=[MISSILE_COUNT-1]
		y=15 {
			tmp2=a=(ptrA),y y--				// X = player graphics
			x=tmp1 a=ShotPosA,x	tmp1--		// A = shot position
			x=tmp2

			c+ hmclr=a
			wsync gp0=x gp1=x=0 x=a { a-30 }>= a<< a<< a<< a^0x70 hp1=a rp1=a
			wsync hmove=a a=x !={ a=0x08 } gp1=a		gp0=a=(ptrA),y y--
			wsync gp0=a=(ptrA),y y--
			wsync gp0=a=(ptrA),y y--
		}>=0

		// KERNEL 3
		x=[MISSILE_COUNT-4]
		nocross {
		.loop:
			a=ShotPosA-1,x
			wsync gp1=y=0 *2 hmclr=a { a-30 }>= a<< a<< a<< a^0x70 hp1=a rp1=a
			wsync hmove=a a=ShotPosA-1,x !={ a=0x08 } gp1=a
	
			a=ShotPosB+[4-1],x		// last shot in this kernel:	4-1+1 = 4
			wsync gp0=y=0 *2 hmclr=a { a-30 }>= a<< a<< a<< a^0x70 hp0=a rp0=a
			wsync hmove=a a=ShotPosB+[4-1],x !={ a=0x08 } gp0=a
			x--
			== goto .endloop
			goto .loop
		.endloop:
		}
		a=P2X
		wsync gp1=y=0 c+ hmclr=a { a-30 }>= a<< a<< a<< a^0x70 hp1=a rp1=a
		wsync hmove=a

		// KERNEL 2B
		tmp1=a=3
		y=0 {
			tmp2=a=(ptrB),y y++				// X = player graphics
			x=tmp1 a=ShotPosB,x	tmp1--		// A = shot position
			x=tmp2

			c+ hmclr=a
			wsync gp1=x gp0=x=0 x=a { a-30 }>= a<< a<< a<< a^0x70 hp0=a rp0=a
			wsync hmove=a a=x !={ a=0x08 } gp0=a			gp1=a=(ptrB),y y++
			wsync gp1=a=(ptrB),y y++
			wsync gp1=a=(ptrB),y y++
			y?16
		}<
		a=0
		gp0=gp1=a

		// KERNEL 1B
		kernel_terror2


	} always	// loop forever
}
