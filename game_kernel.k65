



//	func dotrender {
//		wsync
//		ns0=a=0x10 ns1=a
//		cp0=a=0x00 cp1=a cpf=a
//		ctpf=a=0x11 pf0=a=0x30
//		x=64
//		//a=subframe cp0=a
//		tmp4=a=subframe
//	
//		a=subframe a&0x3F y=a a=DotTextWave,y
//		wsync nocross { a-15 }>=0 a<< a<< a<< a<< a^0x70 hp0=a rp0=a
//		a=DotTextWave,y c- a+2
//		wsync nocross { a-15 }>=0 a<< a<< a<< a<< a^0x70 hp1=a rp1=a
//		wsync hmove=a
//	//	a=subframe a>> a>> a>> px0=a
//		a=subframe a&7 =={
//			fx_counter++
//			a=fx_counter
//			a?124 =={ fx_counter=a=108 }
//		}
//		px0=a=fx_counter
//		a=subframe a&7 a^7 tmp2=a
//		px1=a=&>DotText
//		y=8 txtc=a=(px0),y
//		txtc+1=a=&>iA
//		wsync
//		dottext_core
//		nocross {
//		dotrender_loop:
//			y=DotColors,x a=frambuff-1,x
//			wsync cbg=y em1=y=0 hmclr=a { a-30 }>=0 a<< a<< a<< a^0x70 hm1=a rm1=a tmp4++
//			wsync hmove=a a=frambuff-1,x !={ a|2 } em1=a
//			dottext_core cp0=a=tmp4
//			x--
//	
//			y=DotColors,x a=frambuff-1,x
//			wsync cbg=y eb=y=0 hmclr=a { a-30 }>=0 a<< a<< a<< a^0x70 hb=a rb=a
//			wsync hmove=a a=frambuff-1,x !={ a|2 } eb=a
//			dottext_core
//			x--
//			== goto dotrender_break
//			goto dotrender_loop
//		dotrender_break:
//		}
//		wsync a=0 cbg=a em0=a=0 em1=a eb=a pf0=a gp0=a gp1=a
//	}
//	
//	
//	func fx_dotball {
//	
//		far fsync1 far song_player
//		init_drawdot
//		dfx_init
//		dfxN=a=6 { dfx_step dfxN-- }!=
//	
//		fsync2
//		dfxN=a=17 { dfx_step dfxN-- }!=
//	
//		far fsync3
//		
//		init_drawdot
//		dfxN=a=18 { dfx_step dfxN-- }!=
//		{ a=INTIM a?168 }!=
//		dotrender
//	
//		fbclr
//		//wsync cbg=a=2
//		//wsync cbg=a=0
//	
//	}
//	
//	func seq_dotball {
//	
//		fx_counter=a=0
//		dfx2=a=0
//		{ 
//			a=demo_event
//			a?8 <{	fx_data=a=&<DfxData1	fx_data+1=a=&>DfxData1 }
//			else {
//				a=demo_event
//				a&3
//				a?2 <{
//					a?1 <{ fx_data=a=&<DfxData2	fx_data+1=a=&>DfxData2	}
//					else { fx_data=a=&<DfxData3	fx_data+1=a=&>DfxData3	}
//				} else {
//					a?3 <{ fx_data=a=&<DfxData4	fx_data+1=a=&>DfxData4	}
//					else { fx_data=a=&<DfxData1	fx_data+1=a=&>DfxData1	}
//				}
//			}
//	
//			fx_dotball
//			a=demo_event a?16
//		}<
//		demo_event=a=0
//	}


data TestSine {
	align 256
	for x=0..255 eval [ p = x/256*5, (sin(p*2*pi)*0.5+0.5)*254+1 ]
}

data TestSine2 {
	align 256
	for x=0..255 eval [ p = x/256*7, (sin(p*2*pi)*0.5+0.5)*156+1 ]
}

func game_kernel {

	{
	sync1
		anim++

		// move
		x=47 {
			ShotPosA,x=a=ShotPosA-1,x
			x--
		}!=
		x=0{
			ShotPosB,x=a=ShotPosB+1,x
			x++
			x?47
		}<

		// shoot
		y=anim 
		ShotPosA=a=TestSine,y
		ShotPosB+47=a=TestSine2,y

	sync2
	
	sync3
	
		cp0=a=0x3F
		cp1=a=0x4F

		wsync
		x=48
		nocross {
		.loop:
			a=ShotPosA-1,x
			wsync gp1=y=0 hmclr=a { a-30 }>= a<< a<< a<< a^0x70 hp1=a rp1=a
			wsync hmove=a a=ShotPosA-1,x !={ a=0x80 } gp1=a
	
			a=ShotPosB-1,x
			wsync gp0=y=0 hmclr=a { a-30 }>= a<< a<< a<< a^0x70 hp0=a rp0=a
			wsync hmove=a a=ShotPosB-1,x !={ a=0x80 } gp0=a
			x--
			== goto .endloop
			goto .loop
		.endloop:
		}
		wsync
		a=0
		gp0=gp1=a

	} always	// loop forever
}
