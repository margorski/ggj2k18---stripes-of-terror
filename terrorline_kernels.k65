
image FlowText = "gen/flowtext.bmp";

// 42 instances of 8x6 tiles per bank
data striptvp0 { address 0xF100		image "gen/flowtext" [42*8*0]  5 8> 6^		tiles 8 0 41		}
data striptvp1 { address 0xF200		image "gen/flowtext" [42*8*1]  5 8> 6^		tiles 8 0 41		}
data striptvp2 { address 0xF300		image "gen/flowtext" [42*8*2]  5 8> 6^		tiles 8 0 41		}
data striptvp3 { address 0xF400		image "gen/flowtext" [42*8*3]  5 8> 6^		tiles 8 0 41		}
data striptvp4 { address 0xF500		image "gen/flowtext" [42*8*4]  5 8> 6^		tiles 8 0 41		}
data striptvn0 { address 0xF600		image "gen/flowtext" [42*8*0] 11 8> 6^		tiles 8 0 41		}
data striptvn1 { address 0xF700		image "gen/flowtext" [42*8*1] 11 8> 6^		tiles 8 0 41		}
data striptvn2 { address 0xF800		image "gen/flowtext" [42*8*2] 11 8> 6^		tiles 8 0 41		}
data striptvn3 { address 0xF900		image "gen/flowtext" [42*8*3] 11 8> 6^		tiles 8 0 41		}
data striptvn4 { address 0xFA00		image "gen/flowtext" [42*8*4] 11 8> 6^		tiles 8 0 41		}

[ FAST_SCROLL = 0 ]


bank core;

data strip_lock {
	&>striptvp0
	&>striptvp1
	&>striptvp2
	&>striptvp3
	&>striptvp4
	&>striptvn0
	&>striptvn1
	&>striptvn2
	&>striptvn3
	&>striptvn4
}


inline skip_tiles_1 {
	c- a+6
	a?252 >={ a=0 x++ }		// carry set -> end of current page
}

inline skip_tiles_2 {
	c- a+12		>={ x++ a=6 goto .end }
	a?252 >={ a=0 x++ }		// carry set -> end of current page
.end:
}

#if FAST_SCROLL
func kernel_terror_animate {
	a=anim a&0x07 =={
		x=infoscroll x++ x?165 >={ x=0 } infoscroll=x
	}
}
func kernel_terror_animate_win {
	a=anim a&0x07 =={
		x=infoscroll x++ x?200>={ x=176 } infoscroll=x
	}
}
inline _setup_terror_scroll {
	a=anim a<< a<< a<< a<< a&0x70 c- a+0xC0 y=a
}
#else
func kernel_terror_animate {
	a=anim a&0x0F =={
		x=infoscroll x++ x?165 >={ x=0 } infoscroll=x
	}
}
func kernel_terror_animate_win {
	a=anim a&0x0F =={
		x=infoscroll x++ x?200>={ x=176 } infoscroll=x
	}
}
inline _setup_terror_scroll {
	a=anim a<< a<< a<< a&0x70 c- a+0xC0 y=a
}
#endif


//	  0.. 41			0		X*6
//	 42.. 83			1		(X-42)*6
//	 84..125			2		(X-84)*6
//	126..167			3		(X-126)*6
//	168..209			4		(X-168)*6
//	210..251			5		(X-210)*6

//	INFOSCROLL	IIIIIIII
//	ANIM		---AAA-S

func kernel_terror_setup {
	a=strip_lock		// lock data sections
	a=anim a&1 y=a		// preload shutter bit
	x?0 =={
		x=&>striptvp0
		cpf=a=0x60
		a=0x0F
	}else{
		x=&>striptvn0
		cpf=a=0xD0
		a=0x0F
	}
	tmp3=a

	wsync

	a=infoscroll
	{
		x++
		c+ a-42
	}>=
	x--	c- a+42				
	a<< tmp1=a a<< c- a+tmp1		// A = low addr

	y?0 !={ skip_tiles_1 }
	ptrA=a		ptrA+1=x	skip_tiles_2
	ptrB=a		ptrB+1=x	skip_tiles_2
	ptrC=a		ptrC+1=x	skip_tiles_2
	ptrD=a		ptrD+1=x	skip_tiles_2
	ptrE=a		ptrE+1=x	skip_tiles_2
	ptrF=a		ptrF+1=x


	hmclr=a=0
	gp0=gp1=a
	_setup_terror_scroll

	wsync
	*4
	ns0=ns1=a=6
	cp0=a=tmp3				// CP0
	cp1=a					// CP1
	nocross {
		a=anim a&1 =={
			rp0+256=a *2 rp1=a	hp0=y a=y a+0xF0 hp1=a
		}else{
			*3 rp0=a *2 rp1=a	hp1=y a=y a+0x10 hp0=a
		}
	}
}


//	X	CP0/CP1/CPF			CBG
//	0		15				0x60
//	1		0xDC			0
//



bank terror;

func kernel_terror {

	wsync hmove=a ctpf=a=1
	wsync cbg=a=tmp3					// CPF / CBG
	pf0=a=0b00000000
	pf1=a=0b00000111
	pf2=a=0b11111111
	wsync	y=5
	nocross {
		wsync
		gp0=a=(ptrA),y
		gp1=a=(ptrB),y
		x=a=(ptrE),y
		*11
		gp0=a=(ptrC),y
		gp1=a=(ptrD),y
		gp0=x
		gp1=a=(ptrF),y
		y--
	}>=0
	wsync gp0=gp1=a=0
	wsync
	wsync
	cbg=a=0
	pf0=pf1=pf2=a
	gp0=gp1=a
	ns0=ns1=a
}
